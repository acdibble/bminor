---
source: src/lexer.rs
expression: tokens
---
[
    Token {
        kind: Array,
        lexeme: "array",
        line: 0,
    },
    Token {
        kind: Boolean,
        lexeme: "boolean",
        line: 0,
    },
    Token {
        kind: Char,
        lexeme: "char",
        line: 0,
    },
    Token {
        kind: Else,
        lexeme: "else",
        line: 0,
    },
    Token {
        kind: False,
        lexeme: "false",
        line: 0,
    },
    Token {
        kind: For,
        lexeme: "for",
        line: 0,
    },
    Token {
        kind: Function,
        lexeme: "function",
        line: 0,
    },
    Token {
        kind: If,
        lexeme: "if",
        line: 1,
    },
    Token {
        kind: Integer,
        lexeme: "integer",
        line: 1,
    },
    Token {
        kind: Map,
        lexeme: "map",
        line: 1,
    },
    Token {
        kind: Print,
        lexeme: "print",
        line: 1,
    },
    Token {
        kind: Return,
        lexeme: "return",
        line: 1,
    },
    Token {
        kind: String,
        lexeme: "string",
        line: 1,
    },
    Token {
        kind: True,
        lexeme: "true",
        line: 1,
    },
    Token {
        kind: Void,
        lexeme: "void",
        line: 1,
    },
    Token {
        kind: While,
        lexeme: "while",
        line: 1,
    },
    Token {
        kind: EOF,
        lexeme: "",
        line: 1,
    },
]
